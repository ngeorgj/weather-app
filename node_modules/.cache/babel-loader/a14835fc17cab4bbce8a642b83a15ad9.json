{"ast":null,"code":"var _jsxFileName = \"/home/ngeorg/Desktop/learning/weather/backupapp/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nconst api = {\n  key: \"0f4e92f2963938871eb6ec83654a8366\",\n  base: \"https://api.openweathermap.org/data/2.5\"\n};\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}/weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = ['January', \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: typeof weather.main != 'undefined' ? weather.main.temp < 16 ? 'App cold' : 'App' : 'App',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search for location...\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), typeof weather.main != 'undefined' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, dateBuilder(new Date()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, Math.round(weather.main.temp), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, weather.weather[0].main))) : ''));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ngeorg/Desktop/learning/weather/backupapp/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","country","Date","Math","round"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n\nconst api = {\n  key: \"0f4e92f2963938871eb6ec83654a8366\",\n  base: \"https://api.openweathermap.org/data/2.5\"\n};\n\n\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}/weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => {\n        setWeather(result);\n        setQuery('');\n\n  });\n} }\n\n  const dateBuilder = (d) => {\n    let months = ['January', \"February\", \"March\", \"April\", \"May\", \"June\",\n     \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n     let days = [\"Sunday\", \"Monday\", \"Tuesday\", \n     \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n     let day = days[d.getDay()];\n     let date = d.getDate();\n     let month = months[d.getMonth()];\n     let year = d.getFullYear();\n\n     return `${day} ${date} ${month} ${year}`\n  }\n\n  return (\n    <div className={(typeof weather.main != 'undefined') \n    ? ((weather.main.temp < 16) \n    ? 'App cold' \n    : 'App' ) \n    : 'App'}>\n      <main>\n        <div className=\"search-box\">\n          <input \n          type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"Search for location...\"\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}\n          />\n          \n        </div>\n        {(typeof weather.main != 'undefined' ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">\n              {weather.name}, {weather.sys.country}\n            </div>\n            <div className=\"date\">\n            {dateBuilder(new Date())}\n            </div>\n            </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n            {Math.round(weather.main.temp)}Â°C\n            </div>\n            <div className=\"weather\">\n            {weather.weather[0].main}\n            </div>\n          </div>\n        </div>\n        ) : (''))}\n        \n      </main>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}